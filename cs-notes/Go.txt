func httpGet() {
	resp, err :=http.Get("https://tw.yahoo.com/")
if err != nil {
	// handle error
}

defer resp.Body.Close()
body, err := ioutil.ReadAll(resp.Body)
if err != nil {
	// handle error
}

fmt.Println(string(body))
}

func httpPost() {
	resp, err := http.Post("https://tw.yahoo.com/",
			"application/x-www-form-urlencoded",
			strings.NewReader("name=test"))
if err != uil {
	fmt.Println(err)
}

defer resp.Body.Close()
body, err := ioutil.ReadAll(resp.Body)
if err != nil {
	// handle error
}

fmt.Println(string(body))
}

為方便閱讀與維護，所以Go支援另外一個方法：
	resp, err := http.PostForm("https://tw.yahoo.com/",
			url.Values{"key": {"Value"}, "id": {"test"}})
如果你想要輸入更複雜的參數，例如Cookie等，可以使用client.Do方法來處理：
client :=&http.Client{}

req, err := http.NewRequest("POST", "https://tw.yahoo.com/", strings.NewReader("name=test"))
if err != nil {
	// handle error
}

req.Header.Set("Content-Type", "application/x-www-form-urlencoded")
req.Header.Set("Cookie", "name=test")

resp, err := client.Do(req)

if err != nil {
	// handle error
}

defer resp.Body.Close()
首先先宣告http.Client方便後面使用，前面輸入的方法差不多，不同的是你這邊可以設置更加詳細的參數，最後再用client.Do送出